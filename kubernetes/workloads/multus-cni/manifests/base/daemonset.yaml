apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-ds
  namespace: kube-system
  labels:
    tier: node
    app: multus
    name: multus
spec:
  selector:
    matchLabels:
      name: multus
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: multus
        name: multus
    spec:
      hostNetwork: true
      hostPID: true
      tolerations:
        - operator: Exists
          effect: NoSchedule
        - operator: Exists
          effect: NoExecute
      serviceAccountName: multus
      containers:
        - name: kube-multus
          image: ghcr.io/k8snetworkplumbingwg/multus-cni:snapshot-thick
          command:
            - /usr/src/multus-cni/bin/multus-daemon
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            # multus-daemon expects that cnibin path must be identical between pod and container host.
            # e.g. if the cni bin is in '/opt/cni/bin' on the container host side, then it should be mount to '/opt/cni/bin' in multus-daemon,
            # not to any other directory, like '/opt/bin' or '/usr/bin'.
            - name: cnibin
              mountPath: /opt/cni/bin
            - name: host-run
              mountPath: /host/run
            - name: host-var-lib-cni-multus
              mountPath: /var/lib/cni/multus
            - name: host-var-lib-kubelet
              mountPath: /var/lib/kubelet
              mountPropagation: HostToContainer
            - name: host-run-k8s-cni-cncf-io
              mountPath: /run/k8s.cni.cncf.io
            - name: host-run-netns
              mountPath: /run/netns
              mountPropagation: HostToContainer
            - name: multus-daemon-config
              mountPath: /etc/cni/net.d/multus.d
              readOnly: true
            - name: hostroot
              mountPath: /hostroot
              mountPropagation: HostToContainer
          env:
            - name: MULTUS_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      initContainers:
        - name: install-multus-binary
          image: ghcr.io/k8snetworkplumbingwg/multus-cni:snapshot-thick
          command:
            - cp
            - /usr/src/multus-cni/bin/multus-shim
            - /host/opt/cni/bin/multus-shim
          resources:
            requests:
              cpu: 10m
              memory: 15Mi
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
              mountPropagation: Bidirectional
        - name: cni-plugins
          image: rancher/hardened-cni-plugins:v1.6.0-build20241022
          securityContext:
            privileged: true
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: hostroot
          hostPath:
            path: /
        - name: multus-daemon-config
          configMap:
            name: multus-daemon-config
            items:
              - key: daemon-config.json
                path: daemon-config.json
        - name: host-run
          hostPath:
            path: /run
        - name: host-var-lib-cni-multus
          hostPath:
            path: /var/lib/cni/multus
        - name: host-var-lib-kubelet
          hostPath:
            path: /var/lib/kubelet
        - name: host-run-k8s-cni-cncf-io
          hostPath:
            path: /run/k8s.cni.cncf.io
        - name: host-run-netns
          hostPath:
            path: /run/netns/

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: rke2-multus-dhcp
  namespace: kube-system
  labels:
    tier: node
    app: rke2-multus
spec:
  selector:
    matchLabels:
      app: rke2-multus
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        tier: node
        app: rke2-multus
    spec:
      hostNetwork: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
      initContainers:
        - name: kube-rke2-multus-dhcp-cleanup
          image: rancher/mirrored-library-busybox:1.36.1
          command:
            - rm
            - -f
            - /run/cni/dhcp.sock
          securityContext:
            privileged: true
          volumeMounts:
            - name: socketpath
              mountPath: /host/run/cni
      containers:
        - name: kube-rke2-multus-dhcp
          image: rancher/mirrored-library-busybox:1.36.1
          command:
            - /opt/cni/bin/dhcp
            - daemon
          securityContext:
            privileged: true
          volumeMounts:
            - name: binpath
              mountPath: /opt/cni/bin
            - name: socketpath
              mountPath: /run/cni
            - name: netnspath
              mountPath: /var/run/netns
              mountPropagation: HostToContainer
      volumes:
        - name: binpath
          hostPath:
            path: /opt/cni/bin
        - name: socketpath
          hostPath:
            path: /run/cni
        - name: netnspath
          hostPath:
            path: /run/netns
