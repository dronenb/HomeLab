apiVersion: pgv2.percona.com/v2
kind: PerconaPGCluster
metadata:
  name: netbox-postgresql
  namespace: netbox
spec:
  crVersion: 2.5.1
  users:
    - name: netbox
      databases:
        - netbox
      options: "SUPERUSER"
      password:
        type: ASCII
      secretName: "netbox-postgresql-credentials"
  # https://hub.docker.com/r/percona/percona-postgresql-operator/tags
  image: docker.io/percona/percona-postgresql-operator:2.7.0-ppg13.21-postgres-gis3.3.8@sha256:3df44c1089563b42198ef929e27b9797ef2b04d92736293952163fa7541c0068
  imagePullPolicy: Always
  postgresVersion: 16
  instances:
    - name: instance1
      replicas: 1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/data: postgres
                topologyKey: kubernetes.io/hostname
      dataVolumeClaimSpec:
        storageClassName: nfs-client
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  proxy:
    pgBouncer:
      replicas: 1
      image: percona/percona-postgresql-operator:2.5.1-ppg16.8-pgbouncer1.24.0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/role: pgbouncer
                topologyKey: kubernetes.io/hostname
  backups:
    pgbackrest:
      image: percona/percona-postgresql-operator:2.5.1-ppg16.8-pgbackrest2.54.2
      repoHost:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      postgres-operator.crunchydata.com/data: pgbackrest
                  topologyKey: kubernetes.io/hostname
      manual:
        repoName: repo1
        options:
          - --type=full
      repos:
        - name: repo1
          volume:
            volumeClaimSpec:
              storageClassName: nfs-client
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
