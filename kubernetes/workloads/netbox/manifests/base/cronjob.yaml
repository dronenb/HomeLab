apiVersion: batch/v1
kind: CronJob
metadata:
  name: netbox-housekeeping
  namespace: netbox
  labels:
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.4.2
    helm.sh/chart: netbox-7.1.4
    app.kubernetes.io/component: housekeeping
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  schedule: 0 0 * * *
  successfulJobsHistoryLimit: 5
  suspend: false
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: netbox
        helm.sh/chart: netbox-7.1.4
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: v4.4.2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: netbox
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: netbox
            app.kubernetes.io/version: v4.4.2
            helm.sh/chart: netbox-7.1.4
            app.kubernetes.io/component: housekeeping
        spec:
          serviceAccountName: netbox
          automountServiceAccountToken: false
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: Always
            supplementalGroups: []
            sysctls: []
          containers:
            - name: netbox-housekeeping
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: 1000
                runAsNonRoot: true
                runAsUser: 1000
                seLinuxOptions: {}
                seccompProfile:
                  type: RuntimeDefault
              image: ghcr.io/netbox-community/netbox:v4.4.2
              imagePullPolicy: IfNotPresent
              command:
                - /opt/netbox/venv/bin/python
                - /opt/netbox/netbox/manage.py
                - housekeeping
              volumeMounts:
                - name: config
                  mountPath: /etc/netbox/config/configuration.py
                  subPath: configuration.py
                  readOnly: true
                - name: config
                  mountPath: /run/config/netbox
                  readOnly: true
                - name: secrets
                  mountPath: /run/secrets/netbox
                  readOnly: true
                - name: netbox-tmp
                  mountPath: /tmp
                - name: media
                  mountPath: /opt/netbox/netbox/media
                  subPath: ""
                  readOnly: false
          volumes:
            - name: config
              configMap:
                name: netbox
            - name: secrets
              projected:
                sources:
                  - secret:
                      name: netbox-config
                      items:
                        - key: secret_key
                          path: secret_key
                  - secret:
                      name: netbox-config
                      items:
                        - key: email_password
                          path: email_password
                  - secret:
                      name: netbox-postgresql-credentials
                      items:
                        - key: password
                          path: db_password
                  - secret:
                      name: redis-password
                      items:
                        - key: redis-password
                          path: tasks_password
                  - secret:
                      name: redis-password
                      items:
                        - key: redis-password
                          path: cache_password
            - name: netbox-tmp
              emptyDir:
                medium: Memory
            - name: media
              persistentVolumeClaim:
                claimName: netbox-media
                readOnly: false
          restartPolicy: OnFailure
