apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  namespace: netbox
  labels:
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.4.5
    helm.sh/chart: netbox-7.1.18
    app.kubernetes.io/component: netbox
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: netbox
      app.kubernetes.io/name: netbox
      app.kubernetes.io/component: netbox
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: d235fa79c932be322423638e76203c23569dd1ae41509f6f7a8241c7f3b2e949
      labels:
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: netbox
        app.kubernetes.io/version: v4.4.5
        helm.sh/chart: netbox-7.1.18
        app.kubernetes.io/component: netbox
    spec:
      serviceAccountName: netbox
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: init-dirs
          image: docker.io/busybox:1.37.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - mkdir -p /opt/unit/state /opt/unit/tmp
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: optunit
              mountPath: /opt/unit
      containers:
        - name: netbox
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/netbox-community/netbox:v4.4.5
          imagePullPolicy: IfNotPresent
          env:
            - name: SUPERUSER_NAME
              valueFrom:
                secretKeyRef:
                  name: netbox-superuser
                  key: username
            - name: SUPERUSER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: netbox-superuser
                  key: email
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: nginx-status
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /status/applications/netbox/processes/running
              port: nginx-status
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /login/
              port: http
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /login/
              port: http
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: ""
            - name: optunit
              mountPath: /opt/unit
            - name: secrets
              mountPath: /run/secrets/superuser_password
              subPath: superuser_password
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/superuser_api_token
              subPath: superuser_api_token
              readOnly: true
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 1536Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 1024Mi
      volumes:
        - name: config
          configMap:
            name: netbox
        - name: secrets
          projected:
            sources:
              - secret:
                  name: netbox-config
                  items:
                    - key: secret_key
                      path: secret_key
              - secret:
                  name: netbox-config
                  items:
                    - key: email_password
                      path: email_password
              - secret:
                  name: netbox-superuser
                  items:
                    - key: password
                      path: superuser_password
                    - key: api_token
                      path: superuser_api_token
              - secret:
                  name: netbox-postgresql-credentials
                  items:
                    - key: password
                      path: db_password
              - secret:
                  name: redis-password
                  items:
                    - key: redis-password
                      path: tasks_password
              - secret:
                  name: redis-password
                  items:
                    - key: redis-password
                      path: cache_password
        - name: netbox-tmp
          emptyDir:
            medium: Memory
        - name: optunit
          emptyDir:
            medium: Memory
        - name: media
          persistentVolumeClaim:
            claimName: netbox-media
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-worker
  namespace: netbox
  labels:
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.4.5
    helm.sh/chart: netbox-7.1.18
    app.kubernetes.io/component: worker
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: netbox
      app.kubernetes.io/name: netbox
      app.kubernetes.io/component: worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 54edbdfe549b1c8bfdc45157182702a7475952155df08d0f35307f5bc3fae2ce
      labels:
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: netbox
        app.kubernetes.io/version: v4.4.5
        helm.sh/chart: netbox-7.1.18
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: netbox
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: wait-for-backend
          image: docker.io/rancher/kubectl:v1.34.1
          imagePullPolicy: IfNotPresent
          command:
            - /bin/kubectl
          args:
            - rollout
            - status
            - deployment
            - $(DEPLOYMENT_NAME)
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          env:
            - name: DEPLOYMENT_NAME
              value: netbox
      containers:
        - name: netbox-worker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/netbox-community/netbox:v4.4.5
          imagePullPolicy: IfNotPresent
          command:
            - /opt/netbox/venv/bin/python
            - /opt/netbox/netbox/manage.py
            - rqworker
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: ""
              readOnly: false
      volumes:
        - name: config
          configMap:
            name: netbox
        - name: secrets
          projected:
            sources:
              - secret:
                  name: netbox-config
                  items:
                    - key: secret_key
                      path: secret_key
              - secret:
                  name: netbox-config
                  items:
                    - key: email_password
                      path: email_password
              - secret:
                  name: netbox-superuser
                  items:
                    - key: password
                      path: superuser_password
                    - key: api_token
                      path: superuser_api_token
              - secret:
                  name: netbox-postgresql-credentials
                  items:
                    - key: password
                      path: db_password
              - secret:
                  name: redis-password
                  items:
                    - key: redis-password
                      path: tasks_password
              - secret:
                  name: redis-password
                  items:
                    - key: redis-password
                      path: cache_password
        - name: netbox-tmp
          emptyDir:
            medium: Memory
        - name: media
          persistentVolumeClaim:
            claimName: netbox-media
            readOnly: false
